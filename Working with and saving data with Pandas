{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "kernelspec": {
      "display_name": "Python",
      "language": "python",
      "name": "conda-env-python-py"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.6.7"
    },
    "colab": {
      "name": "ReadFile.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "include_colab_link": true
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/cohanra/main/blob/main/ReadFile.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Vb0Ld-afVG9b"
      },
      "source": [
        "<div dir=rtl><h1>خواندن فایل ها در پایتون</h1>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ns7gfRsBVG9c"
      },
      "source": [
        "<div dir=rtl> <p> در این قسمت نحوه خواندن فایل ها در زبان برنامه نویسی پایتون را یاد خواهید گرفت.</p>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "lLaRh1o2VG9d"
      },
      "source": [
        "<div dir=rtl> <h2>فهرست مطالب</h2>\n",
        "<div class=\"alert alert-block alert-info\" style=\"margin-top: 20px\">\n",
        "    <ul>\n",
        "        <li><a href=\"download\">دانلود اطلاعات</a></li>\n",
        "        <li><a href=\"read\">خواندن فایل های متنی</a></li>\n",
        "        <li><a href=\"better\">روش بهتر برای باز کردن فایل ها</a></li>\n",
        "</div>\n",
        "<hr>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "W9HASaW7VG9d"
      },
      "source": [
        "<div dir=rtl><h2 id=\"download\">دانلود اطلاعات</h2>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "64cdsT0-VG9e"
      },
      "source": [
        "# دانلود فایل با استفاده از کد زیر انجام می پذیرد #\n",
        "\n",
        "!wget -O /content/Example1.txt https://github.com/cohanra/main/blob/335c5be8a4d9153dafbd25b901086558f643564d/Example1.txt"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "s45iP-vpVG9f"
      },
      "source": [
        "<hr>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "2vkaM4rPVG9f"
      },
      "source": [
        "<div dir=rtl> <h2 id=\"read\">خواندن فایل های متنی</h2>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "VOsTxG-6VG9g"
      },
      "source": [
        "<div dir=rtl> یک روش برای خواندن و یا نوشتن فایل هل در زبان برنامه نویسی پایتون استفاده از تابع <code>open</code> می باشد. این تابع با ایجاد یک \"فایل شیء\" که حاوی روش های و ویژگی های مورد نیاز شما برای خواندن، ذخیره کردن و دستکاری فایل هست را فراهم می سازد. در اینجا ما تنها به خواندن و نوشتن فایل های متنی (txt) می پردازیم. اولین پارامتری که شما نیاز دارید نام و مسیر فایل می باشد که در شکل زیر نمایش داده شده است."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "HqvXgjB1VG9g"
      },
      "source": [
        "<img src=\"https://s3-api.us-geo.objectstorage.softlayer.net/cf-courses-data/CognitiveClass/PY0101EN/Chapter%204/Images/ReadOpen.png\" width=\"500\" />"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "foKBCNziVG9g"
      },
      "source": [
        "<div dir=rtl> پارامتر mode اختیاری بوده و به صورت پیش فرض مقدار r را دارد. در این قسمت ما فقط دو پارامتر mode را معرفی می کنیم:\n",
        "\n",
        "<ul>\n",
        "    <li><b>r</b> برای خواندن فایل </li>\n",
        "    <li><b>w</b> برای نوشتن فایل</li>\n",
        "</ul>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "uj7ojxVcVG9h"
      },
      "source": [
        "<div dir=rtl>  در مثال بعد ما فایل متنی \"Example1.txt\" را  که متن داخل آن در شکل زیر نشان داده شده است."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "JdrcQjQKVG9h"
      },
      "source": [
        "<img src=\"https://s3-api.us-geo.objectstorage.softlayer.net/cf-courses-data/CognitiveClass/PY0101EN/Chapter%204/Images/ReadFile.png\" width=\"200\" />"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "2dkvH9w2VG9h"
      },
      "source": [
        "<div dir=rtl> ابتدا فایل را می خوانیم: "
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "G7S2ezmnVG9i"
      },
      "source": [
        "example1 = \"/content/Example1.txt\"\n",
        "file1 = open(example1, \"r\")"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "qck5n3_WVG9i"
      },
      "source": [
        "<div dir=rtl> ما می توانیم ویژگی های فایل را با اجرای کدهای مختلف ببینیم. به مثال های زیر توجه کنید."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "8npNIrlbVG9i"
      },
      "source": [
        "<div dir=rtl> اسم فایل با اجرای کد زیر بدست می آید:"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Qcz8sJcrVG9i"
      },
      "source": [
        "file1.name"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "f6mfE6qkVG9j"
      },
      "source": [
        "<div dir=rtl>  با استفاده از ویژگی mode،  مد فایل شیء که در آن قرار دارد را بدست می آوریم که در این مثال خواندن (r) می باشد."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "JgAdeEf6VG9j"
      },
      "source": [
        "file1.mode"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "4j7DPiqFVG9j"
      },
      "source": [
        "<div dir=rtl> ما می توانیم با دستور <code>read()</code> فایل را خوانده و آن را در یک متغیر (FileContent) ذخیره نماییم."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "orOpJYjjVG9j"
      },
      "source": [
        "FileContent = file1.read()\n",
        "FileContent"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Ntb7iGtWVG9k"
      },
      "source": [
        "<div dir=rtl> علامت <b>n\\</b> به معنای وجود خط جدید است. "
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "WZn5q6EqVG9k"
      },
      "source": [
        "<div dir=rtl> ما می توانیم فایل را پرینت نماییم."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "iowSyBzYVG9k"
      },
      "source": [
        "print(FileContent)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "rpQ73sFfVG9k"
      },
      "source": [
        "<div dir=rtl> نوع فایل را با استفاده از دستور <code>()type</code> بدست می آوریم."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1VeLDUaoVG9k"
      },
      "source": [
        "type(FileContent)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "nZhTNqoyVG9l"
      },
      "source": [
        "<div dir=rtl> در انتها ما می بایست حتما فایل شیء را ببندیم که این کار با دستور زیر انجام می پذیرد."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "-haKkl1dVG9l"
      },
      "source": [
        "file1.close()"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "p5xTMLbnVG9l"
      },
      "source": [
        "<hr>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "BCROe3PAVG9l"
      },
      "source": [
        "<div dir=rtl> <h2 id=\"better\">یک روش بهتر برای باز کردن فایل</h2>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "LLxxZnxGVG9l"
      },
      "source": [
        "<div dir=rtl> استفاده از عبارت with روش بهتری برای باز کردن فایل ها می باشد، زیرا در این روش دیگر نیازی به اجرای کد بستن فایل وجود ندارد. این کد هر دستوری را که در داخلش (indent block) نوشته شود اجرا کرده و در انتها \"فایل شیء\" را می بندد."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "7wooV1zVVG9m"
      },
      "source": [
        "with open(example1, \"r\") as file1:\n",
        "    FileContent = file1.read()\n",
        "    print(FileContent)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Y-w1TVkwVG9m"
      },
      "source": [
        "<div dir=rtl> شما می توانید بسته شدن فایل را با اجرای کد زیر بررسی نمایید."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pYhFXGbPVG9m"
      },
      "source": [
        "# بررسی بسته شدن فایل #\n",
        "\n",
        "file1.closed"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "bbC5lAY_VG9m"
      },
      "source": [
        "<div dir=rtl> همچنین ما می توانیم اطلاعات ذخیره شده در فایل را مشاهده کنیم."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "vjcLcVp7VG9n"
      },
      "source": [
        "# مشاهده اطلاعات ذخیره شده در فایل #\n",
        "\n",
        "print(FileContent)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "H8-C7WrbVG9n"
      },
      "source": [
        "<div dir=rtl> عبارت with ممکن است مقداری گیج کننده باشد. بدین منظور در شکل زیر قسمت های مختلف آن توضیح داده شده است."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "_biNzSkVVG9n"
      },
      "source": [
        "<img src=\"https://s3-api.us-geo.objectstorage.softlayer.net/cf-courses-data/CognitiveClass/PY0101EN/Chapter%204/Images/ReadWith.png\" width=\"500\" />"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Pcovzpd5VG9n"
      },
      "source": [
        "<div dir=rtl> علاوه بر این با استفاده از عبارت with لازم نیست که هر بار ما کل فایل را بخوانیم. به طور مثال ما می توانیم چهار کاراکتر اول را با قرار دادن عدد 4 به عنوان پارامتر <code>()file1.read</code> در خط دوم عبارت یعنی <code>print(file1.read())</code> بخوانیم."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "VoH_AC-kVG9n"
      },
      "source": [
        "# خواندن چهار کاراکتر اول فایل #\n",
        "\n",
        "with open(example1, \"r\") as file1:\n",
        "    print(file1.read(4))"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "s0Kd29nQVG9o"
      },
      "source": [
        "<div dir=rtl> با تکرار کد خط دوم یعنی <code>()read.</code> و مقداردهی مجدد آن (مثلا 15، 7 و 4) در یک خط جدید می توانیم کاراکتر های دیگر ذخیره شده در فایل را مشاهده کنیم. به مثال زیر توجه کنید:"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "01dqxzazVG9o"
      },
      "source": [
        "with open(example1, \"r\") as file1:\n",
        "    print(file1.read(4))\n",
        "    print(file1.read(4))\n",
        "    print(file1.read(7))\n",
        "    print(file1.read(15))"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "dQTBcli-VG9o"
      },
      "source": [
        "<div dir=rtl> فرآیند بالا در هنگام اجرای کد در شکل زیر با رنگ نمایش داده شده است."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "DLTn0MviVG9o"
      },
      "source": [
        "<img src=\"https://s3-api.us-geo.objectstorage.softlayer.net/cf-courses-data/CognitiveClass/PY0101EN/Chapter%204/Images/ReadChar.png\" width=\"500\" />"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "02ZstsLWVG9p"
      },
      "source": [
        "<div dir=rtl>کدهای زیر مثال دیگری از خواندن متن فایل می باشد. در این مثال ابتدا 16 کارکاتر اول فایل خوانده شده و سپس 5 و در انتها 9 کاراکتر بعدی خوانده می شوند."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "cKxdXb1sVG9p"
      },
      "source": [
        "with open(example1, \"r\") as file1:\n",
        "    print(file1.read(16))\n",
        "    print(file1.read(5))\n",
        "    print(file1.read(9))"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "-P8cAgVBVG9p"
      },
      "source": [
        "<div dir=rtl> همچنین ما می توانیم خط اول فایل را با استفاده از دستور <code>()readline</code> بخوانیم. "
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "TpVdOSaAVG9p"
      },
      "source": [
        "with open(example1, \"r\") as file1:\n",
        "    print(\"first line: \" + file1.readline())"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "_9Mp101bVG9p"
      },
      "source": [
        "<div dir=rtl> ما می توانیم با استفاده از loop به هر خط از فایل دسترسی پیدا کنیم. به کد دستوری زیر توجه نمایید:"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3DHyTWXrVG9q"
      },
      "source": [
        "with open(example1,\"r\") as file1:\n",
        "        i = 0;\n",
        "        for line in file1:\n",
        "            print(\"Iteration\", str(i), \": \", line)\n",
        "            i = i + 1;"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Z7jmGmUsVG9q"
      },
      "source": [
        "<div dir=rtl> ما می توانیم با استفاده از کد <code>()readlines</code> فایل متنی را به صورت یک list ذخیره کنیم. به کد دستوری یر توجه نمایید:"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tLWHOlrfVG9q"
      },
      "source": [
        "with open(example1, \"r\") as file1:\n",
        "    FileasList = file1.readlines()\n",
        "    print(FileasList)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "hTp9eTD6VG9r"
      },
      "source": [
        "<div dir=rtl> هر عضو لیست ایجاد شده مربوط به یک خط متن می باشد. این مطلب را با پرینت کردن هر ایندکس می توانیم مشاهده نماییم."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "cvz3ZkSoVG9r"
      },
      "source": [
        "FileasList[0]"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "OjGGtINLVG9r"
      },
      "source": [
        "FileasList[1]"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bLO6ZH_mVG9s"
      },
      "source": [
        "FileasList[2]"
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}
